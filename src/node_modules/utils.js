import { Socket } from "phoenix";
import { goto } from "@sapper/app";

let socket;
let onboardingChannel;
let me;

export async function getSocket() {
  return socket || (await createSocket());
}

export function getMe() {
  return me;
}

async function init() {
  const res = await fetch("/api/me", { credentials: "include" });

  if (res.ok) {
    const json = await res.json();

    me = json.me;
    const { next, token } = json;

    if (next === "blocked") {
      goto("/blocked");
      return;
    } else if (next === "onboarding") {
      // if (!location.href.includes("onboarding")) {
      //   goto("/onboarding");
      // }
    }

    socket = new Socket("/api/socket", {
      params: { token },
      logger: (kind, msg, data) => {
        console.log(`${kind}: ${msg}`, data);
      },
    });

    socket.onClose(() => {
      // TODO set error (show disconnected banner)
    });

    socket.connect();
  } else if (res.status === 401) {
    goto("/auth");
  } else {
    // TODO
    goto("/");
  }
}

async function createSocket() {
  await init();
  return socket;
}

export async function getOnboardingChannel() {
  return onboardingChannel || (await createOnboardingChannel());
}

async function createOnboardingChannel() {
  const socket = await getSocket();
  onboardingChannel = socket.channel(`onboarding:${me}`);
  onboardingChannel.join();
  return onboardingChannel;
}

async function fetchPlus(path, options = {}) {
  if (navigator.onLine) return fetch(path, options);
  alert(`Интернета нету :(`);
  return { offline: true };
}

function gatherMeta() {
  return {
    platform: navigator.platform,
    userAgent: navigator.userAgent,
    appVersion: navigator.appVersion,
    vendor: navigator.vendor,
    opera: window.opera,
    screen: [window.screen.availWidth, window.screen.availHeight],
    devicePixelRatio: window.devicePixelRatio,
  };
}

function buildURL(path) {
  return path + document.location.search
}

export async function visited(id) {
  return await fetchPlus(buildURL("/api/visited"), {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ id, meta: gatherMeta() }),
  });
}

export async function isCodeAvailalbe(code) {
  const res = await fetchPlus(
    "/api/is-code-available/" + encodeURIComponent(code)
  );
  const text = await res.text();
  return text === "true";
}

export async function savePhone(phone, visit) {
  return await fetchPlus(buildURL("/api/share-phone"), {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      phone,
      meta: { visit }
    }),
  });
}

export async function saveCode(code, visit) {
  return await fetchPlus(buildURL("/api/save-code"), {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      code,
      meta: { visit }
    }),
  });
}

// TODO
// window.onerror = function (msg, url, lineNo, columnNo, error) {
//   var string = msg.toLowerCase();
//   var substring = "script error";
//   if (string.indexOf(substring) > -1) {
//     alert("Script Error: See Browser Console for Detail");
//   } else {
//     var message = [
//       "Message: " + msg,
//       "URL: " + url,
//       "Line: " + lineNo,
//       "Column: " + columnNo,
//       "Error object: " + JSON.stringify(error),
//     ].join(" - ");

//     alert(message);
//   }

//   return false;
// };
